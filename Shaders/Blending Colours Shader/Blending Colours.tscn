[gd_scene load_steps=3 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_add;

uniform vec4 colour_one : hint_color;
uniform vec4 colour_two : hint_color;
uniform vec4 colour_three : hint_color;
uniform vec2 colour_one_pos = vec2(0.333, 0.4);
uniform vec2 colour_two_pos = vec2(0.666, 0.4);
uniform vec2 colour_three_pos = vec2(0.5, 0.6);

uniform float circle_radius = 0.3;

void fragment(){
	//COLOR.a = 0.0;
	COLOR = vec4(0, 0, 0, 1);
	
	bool in_colour_one = distance(colour_one_pos, UV) <= circle_radius;
	bool in_colour_two = distance(colour_two_pos, UV) <= circle_radius;
	bool in_colour_three = distance(colour_three_pos, UV) <= circle_radius;
	
	if (in_colour_one) {
    	COLOR.rgb += colour_one.rgb;
	}
	if (in_colour_two) {
	    COLOR.rgb += colour_two.rgb;
	}
	if (in_colour_three) {
	    COLOR.rgb += colour_three.rgb;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/colour_one = Color( 1, 0, 0, 1 )
shader_param/colour_two = Color( 0, 1, 0, 1 )
shader_param/colour_three = Color( 0, 0, 1, 1 )
shader_param/colour_one_pos = Vector2( 0.333, 0.4 )
shader_param/colour_two_pos = Vector2( 0.666, 0.4 )
shader_param/colour_three_pos = Vector2( 0.5, 0.6 )
shader_param/circle_radius = 0.3

[node name="Blending Colours" type="Node2D"]

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}
